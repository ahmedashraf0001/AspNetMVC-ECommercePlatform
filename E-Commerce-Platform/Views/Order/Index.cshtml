@using E_Commerce_Platform.ViewModels
@using Microsoft.AspNetCore.Identity
@model OrderPageViewModel

@{
    ViewData["Title"] = "Index";

}
<style>
    /* Styled Validation Summary */
    .validation-summary {
    width: 100%;
    /* background-color: #f8d7da; */
    color: red;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 15px;
    }

    .validation-summary ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
    }

    .validation-summary li::before {
    content: "⚠ "; /* Warning icon */
    font-weight: bold;
    }
</style>
<div class="card shadow-sm">
    <div class="card-header">
        <h4 class="mb-0">Orders</h4>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center gap-3" style="width:100%;">
            <form method="get" asp-action="Index" class="d-flex align-items-center gap-2">
                <label for="sortOption" class="form-label me-2 fw-bold fs-5">Sort:</label>
                <select name="sortBy" id="sortOption" class="form-select" onchange="this.form.submit()">
                    <option value="Select">Select</option>
                    <option value="Id" selected="@(Model.SortBy == "Id" ? "selected" : null)">ID</option>
                    <option value="FullName" selected="@(Model.SortBy == "FullName" ? "selected" : null)">Name</option>
                    <option value="TotalCost" selected="@(Model.SortBy == "TotalCost" ? "selected" : null)">Total Cost</option>
                    <option value="OrderDate" selected="@(Model.SortBy == "OrderDate" ? "selected" : null)">Date</option>
                    <option value="Status" selected="@(Model.SortBy == "Status" ? "selected" : null)">Status</option>
                </select>
            </form>

            <form asp-action="Index" method="GET" class="d-flex align-items-center gap-2">
                <label for="Search" class="form-label me-2 fw-bold fs-5">Search:</label>
                <input type="text" name="search" value="@Model.SearchQuery" placeholder="Search" class="form-control">
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
        <div asp-validation-summary="All" class="validation-summary"></div>
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>User</th>
                    <th>Total Cost</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Product Details</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Orders.Count == 0)
                {
                    <tr>
                        <td colspan="7" class="text-center">
                            <span>No Orders Found</span>
                        </td>
                    </tr>
                }
                @foreach (var order in Model.Orders)
                {
                    <tr>
                        <td>@order?.Id</td>
                        <td>@order?.User?.FullName</td>
                        <td>$@order?.TotalCost.ToString("N0")</td>
                        <td>@order?.OrderDate</td>
                        <td>
                            <span class="badge @(order.Status switch
                                                {
                                                    OrderStatus.Delivered => "bg-success",  
                                                    OrderStatus.Cancelled => "bg-danger",  
                                                    OrderStatus.Pending => "bg-warning",   
                                                    OrderStatus.Shipped => "bg-primary",   
                                                    _ => "bg-secondary"                     
                                                })"
                            style="font-size:15px">
                                @order.Status
                            </span>
                        </td>
                        <td>
                            <div class="d-flex gap-2" style=" font-size:10px">
                                @if (order.Status != OrderStatus.Cancelled)
                                {
                                    <a asp-action="ChangeStatus" asp-route-orderId="@order.Id" , asp-route-page="@Model.CurrentPage" asp-route-search="@Model.SearchQuery" asp-route-sortBy="@Model.SortBy" class="btn btn-primary" style="font-size:15px">Status</a>

                                }
                                <a asp-action="Details" asp-route-orderId="@order.Id" class="btn btn-success" style="font-size:15px">Details</a>
                                <button class="btn btn-danger" onclick="showWarning('@order.Id')">Remove</button>

                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="d-flex justify-content-between align-items-center w-100 gap-3">
            <span class="fs-6 text-secondary">Orders found: @Model.TotalOrders</span>

            <div class="pagination" style="display:flex; justify-content:center; align-items:center; gap:10px">
                <span class="mx-2">Page @Model.CurrentPage of @Model.TotalPages</span>

                @if (Model.CurrentPage > 1)
                {
                    <a asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-pageSize="12" asp-route-search="@Model.SearchQuery" asp-route-sortBy="@Model.SortBy" class="btn btn-secondary">Previous</a>
                }
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <a asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-pageSize="12" asp-route-search="@Model.SearchQuery" asp-route-sortBy="@Model.SortBy" class="btn btn-secondary">Next</a>
                }
            </div>
        </div>

    </div>
</div>
<script>
    function showWarning(id) {
        if (confirm(`Are you sure you want to delete order ${id}?`)) {
            fetch(`/Order/Delete`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                body: `orderId=${id}`
            }).then(response => {
                if (response.redirected) {
                    window.location.href = response.url; // Redirect after successful deletion
                } else {
                    alert("Failed to delete the order.");
                }
            }).catch(error => console.error("Error:", error));
        }
    }
</script>
