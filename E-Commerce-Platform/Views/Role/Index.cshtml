@using Microsoft.AspNetCore.Identity
@model List<IdentityRole>

@{
    ViewData["Title"] = "Index";

}
<style>
    /* Styled Validation Summary */
    .validation-summary {
        width: 100%;
        /* background-color: #f8d7da; */
        color: red;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 15px;
    }

    .validation-summary ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
    }

    .validation-summary li::before {
        content: "⚠ "; /* Warning icon */
        font-weight: bold;
    }
</style>
<div class="card shadow-sm">
    <div class="card-header">
        <h4 class="mb-0">Roles</h4>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center gap-3" style="width:100%;">
            <form method="get" asp-action="Sort"  class="d-flex align-items-center gap-2">
                <label for="sortOption" class="form-label me-2 fw-bold fs-5">Sort:</label>
                <select name="sortOption" id="sortOption" class="form-select" onchange="this.form.submit()">
                    <option value="Select">Select</option>
                    <option value="Id" selected="@(ViewBag.SortOption == "Id" ? "selected" : null)">ID</option>
                    <option value="Name" selected="@(ViewBag.SortOption == "Name" ? "selected" : null)">Name</option>
                </select>
                <input type="hidden" name="type" value="Role">
            </form>

            <form asp-action="Search" method="GET">
                <label for="Search" class="form-label me-2 fw-bold fs-5">Search:</label>
                <input type="text" name="keyword" placeholder="Search">
                <input type="hidden" name="type" value="Role">
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
        <div asp-validation-summary="ModelOnly" class="validation-summary"></div>
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Role ID</th>
                    <th>Role Name</th>
                    <th>Users</th>
                </tr>
            </thead>
            <tbody>
                @if(Model.Count == 0){
                    <tr>
                        <td colspan="7" class="text-center">
                            <span>No Roles Found</span>
                        </td>
                    </tr>
                }
                @foreach (var role in Model)
                {
                    <tr>
                        <td>@role.Id</td>
                        <td>$@role.Name</td>
                        <td>
                            <div class="d-flex gap-2" style=" font-size:10px">
                                <button class="btn btn-danger" onclick="showWarning('@role.Name', '@role.Id')">Remove</button>
                                <a asp-action="Details" asp-route-roleId="@role.Id" class="btn btn-success" style="font-size:15px">Show Users</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="d-flex justify-content-between align-items-center w-100 gap-3">
            <span class="fs-6 text-secondary">Roles found: @Model.Count</span>
            <div class="d-flex gap-2">
                <a asp-action="Create" class="btn btn-primary">Add</a>
                <a asp-controller="Admin" asp-action="Dashboard" class="btn btn-secondary">Back to Dashboard</a>
            </div>
        </div>

    </div>
</div>
<script>
    function showWarning(entry, id) {
        if (confirm(`Are you sure you want to delete ${entry}?`)) {
            fetch(`/Role/Delete`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                body: `roleId=${id}`
            }).then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                } else {
                    alert("Failed to delete ${entry}.");
                }
            }).catch(error => console.error("Error:", error));
        }
    }
</script>
