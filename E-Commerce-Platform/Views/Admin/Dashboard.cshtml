@model AdminDashboardViewModel 
@{
    ViewData["Title"] = "Admin Panel";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    body {
        background-color: #f8f9fa;
    }

    .dashboard-container {
        display: flex;
        height: calc(100vh - 100px); 
    }

    .card.p-3 {

        max-height: 400px;
    }

    .content {
        flex-grow: 1;
        padding: 20px;
        overflow-y: auto;
    }

    .card {
        border: none;
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
    }
</style>
<div class="content">
    <h2 class="mb-4">📊 Admin Dashboard</h2>

    <div class="row">
        <div class="col-md-3">
            <a asp-controller="User" asp-action="Index" class="text-decoration-none">
                <div class="card p-3">
                    <h5>Total Users</h5>
                    <h3>@Model.TotalUsers</h3>
                </div>
            </a>
        </div>
        <div class="col-md-3">
            <a asp-controller="Order" asp-action="Index" class="text-decoration-none">
                <div class="card p-3">
                    <h5>Orders Today</h5>
                    <h3>@Model.OrdersToday</h3>
                </div>
            </a>
        </div>
        <div class="col-md-3">
            <a asp-controller="Order" asp-action="Index" class="text-decoration-none">
                <div class="card p-3">
                    <h5>Revenue</h5>
                    <h3>$@Model.MonthlyRevenue.ToString("N0")</h3>
                </div>
            </a>
        </div>
        <div class="col-md-3">
            <a asp-controller="Order" asp-action="Index" class="text-decoration-none">
                <div class="card p-3">
                    <h5>Pending Issues</h5>
                    <h3>@Model.PendingIssues</h3>
                </div>
            </a>
        </div>
    </div>


    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card p-3">
                <h5>📈 Sales Growth</h5>
                <canvas id="salesChart"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card p-3">
                <h5>📦 Orders Overview</h5>
                <canvas id="ordersChart"></canvas>
            </div>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card p-3 h-100 d-flex flex-column" style="justify-content:center; align-items:center; padding:30px !important;">
                <h5>📊 Orders by Status</h5>
                <canvas id="ordersStatusChart" class="flex-grow-1" ></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card p-3 h-100 d-flex flex-column">
                <h5>🔥 Top Selling Products</h5>
                <ul class="list-group list-group-flush flex-grow-1">
                    @foreach (var product in Model.TopProducts)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            @product.Name
                            <span class="badge bg-primary">$@product.Sales.ToString("N0")</span>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="mt-4">
        <h5>🛍️ Recent Orders</h5>
        <table class="table table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Order ID</th>
                    <th>Customer</th>
                    <th>Status</th>
                    <th>Total</th>
                    <th>Action</th> 
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.RecentOrders)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.User.FullName</td>
                        <td>
                            <span class="badge @(order.Status switch
                        {
                            OrderStatus.Delivered => "bg-success",
                            OrderStatus.Cancelled => "bg-danger",
                            OrderStatus.Pending => "bg-warning",
                            OrderStatus.Shipped => "bg-primary",
                            _ => "bg-secondary"
                        })"
                                  style="font-size: 15px;">
                                @order.Status
                            </span>
                        </td>
                        <td>$@order.TotalCost.ToString("N0")</td>
                        <td>
                            <a asp-controller="Order" asp-action="Details" asp-route-orderId="@order.Id" class="btn btn-primary btn-sm">
                                View
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    const salesCtx = document.getElementById('salesChart').getContext('2d');
    const ordersCtx = document.getElementById('ordersChart').getContext('2d');
    const ordersStatusCtx = document.getElementById('ordersStatusChart').getContext('2d');
        const chartOptions = {
        animation: {
            duration: 1500,
            easing: 'easeOutBounce'
        }
    };
    console.log(@Html.Raw(Json.Serialize(Model.MonthlyRevenueListLabels)).$values);
    console.log(@Html.Raw(Json.Serialize(Model.MonthlyRevenueList)));


    new Chart(salesCtx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.MonthlyRevenueListLabels)).$values,
            datasets: [{
                label: 'Sales ($)',
                data: @Html.Raw(Json.Serialize(Model.MonthlyRevenueList)).$values,
                borderColor: 'blue',
                borderWidth: 2
            }]
        },
        options: chartOptions
    });

    new Chart(ordersCtx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.DailyOrdersDateLabels)).$values,
            datasets: [{
                label: 'Orders',
                data: @Html.Raw(Json.Serialize(Model.DailyOrders)).$values,
                backgroundColor: 'green'
            }]
        },
        options: chartOptions
    });

    new Chart(ordersStatusCtx, {
        type: 'doughnut',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.OrderStatusLabels)).$values,
            datasets: [{
                data: @Html.Raw(Json.Serialize(Model.OrderStatusCounts)).$values,
                backgroundColor: ['#4CAF50', '#2196F3', '#FFC107', '#F44336'], 
                hoverBackgroundColor: ['#45A049', '#1E88E5', '#FFB300', '#E53935'], 
                borderWidth: 2,
                borderColor: '#fff'
            }]
        },
        options: {
            options: chartOptions,
            responsive: true,
            maintainAspectRatio: false
        }
    });


</script>