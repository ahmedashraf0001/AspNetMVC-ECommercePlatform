@using E_Commerce_Platform.ViewModels
@model TransactionPageViewModel

@{
    ViewData["Title"] = "Admin Transactions";

}

<style>
    /* Styled Validation Summary */
    .validation-summary {
        width: 100%;
        /* background-color: #f8d7da; */
        color: red;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 15px;
    }
    .validation-summary ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
    }

    .validation-summary li::before {
        content: "⚠ "; /* Warning icon */
        font-weight: bold;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
<div class="card shadow-sm">
    <div class="card-header">
        <h4 class="mb-0">Transactions</h4>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center gap-3" style="width:100%;">
            <form method="get" asp-action="Index" class="d-flex align-items-center gap-2">
                <label for="sortOption" class="form-label me-2 fw-bold fs-5">Sort:</label>
                <select name="sortBy" id="sortOption" class="form-select" onchange="this.form.submit()">
                    <option value="Select">Select</option>
                    <option value="Id" selected="@(Model.SortBy == "Id" ? "selected" : null)">Transaction ID</option>
                    <option value="FullName" selected="@(Model.SortBy == "FullName" ? "selected" : null)">User</option>
                    <option value="orderId" selected="@(Model.SortBy == "orderId" ? "selected" : null)">Order ID</option>
                    <option value="TotalCost" selected="@(Model.SortBy == "TotalCost" ? "selected" : null)">Total Cost</option>
                    <option value="paymentMethod" selected="@(Model.SortBy == "paymentMethod" ? "selected" : null)">Payment Method</option>
                    <option value="TransactionDate" selected="@(Model.SortBy == "TransactionDate" ? "selected" : null)">Transaction Date</option>
                    <option value="Status" selected="@(Model.SortBy == "Status" ? "selected" : null)">Status</option>
                </select>
            </form>

            <form asp-action="Index" method="GET" class="d-flex align-items-center gap-2">
                <label for="Search" class="form-label me-2 fw-bold fs-5">Search:</label>
                <input type="text" name="search" value="@Model.SearchQuery" placeholder="Search" class="form-control">
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
        <div asp-validation-summary="All" class="validation-summary"></div>
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Transaction ID</th>
                    <th>Order ID</th>
                    <th>User</th>
                    <th>Total Cost</th>
                    <th>Payment Method</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Transactions.Count == 0)
                {
                    <tr>
                        <td colspan="7" class="text-center">
                            <span>No Transactions Found</span>
                        </td>
                    </tr>
                }
                @foreach (var transaction in Model.Transactions)
                {
                    <tr>
                        <td>@transaction.Id</td>
                        <td>@transaction.OrderId </td>
                        <td>@transaction.User.FullName</td>
                        <td>$@transaction.TotalCost.ToString("N0")</td>
                        <td>
                            <i class="@(transaction.paymentMethod switch
                                        {
                                            PaymentMethod.CreditCard => "fa-solid fa-credit-card text-primary",
                                            PaymentMethod.DebitCard => "fa-solid fa-credit-card text-info",
                                            _ => "fa-solid fa-question-circle text-secondary"
                                        })"></i>
                            <span style="margin-left:10px">@transaction.paymentMethod</span>
                        </td>
                        <td>@transaction.TransactionDate.ToShortDateString()</td>
                        <td>
                            <span class="badge @(transaction.transactionStatus switch
                                                {
                                                    TransStatus.Completed => "bg-success",
                                                    TransStatus.Refunded => "bg-dark",
                                                    TransStatus.Pending => "bg-warning",
                                                    TransStatus.Chargeback => "bg-primary",
                                                    TransStatus.Failed => "bg-danger",
                                                    _ => "bg-secondary"
                                                })"
                                  style="font-size:15px">
                                @transaction.transactionStatus
                            </span>
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-transId="@transaction.Id" class="btn btn-info btn-sm">View</a> 
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="d-flex justify-content-between align-items-center w-100 gap-3">
            <span class="fs-6 text-secondary">Transactions found: @Model.TotalTransactions</span>
            <div class="pagination" style="display:flex; justify-content:center; align-items:center; gap:10px">
                <span class="mx-2">Page @Model.CurrentPage of @Model.TotalPages</span>

                @if (Model.CurrentPage > 1)
                {
                    <a asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-pageSize="12" asp-route-search="@Model.SearchQuery" asp-route-sortBy="@Model.SortBy" class="btn btn-secondary">Previous</a>
                }
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <a asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-pageSize="12" asp-route-search="@Model.SearchQuery" asp-route-sortBy="@Model.SortBy" class="btn btn-secondary">Next</a>
                }
            </div>
        </div>
    </div>
</div>
