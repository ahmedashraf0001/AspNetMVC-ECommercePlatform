@model List<Category>

@{
    ViewData["Title"] = "Categories";
}

<div class="card shadow-sm">
    <div class="card-header">
        <h4 class="mb-0">Categories</h4>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center gap-3" style="width:100%;">
            <form method="get" asp-action="Sort" class="d-flex align-items-center gap-2">
                <label for="sortOption" class="form-label me-2 fw-bold fs-5">Sort:</label>
                <select name="sortOption" id="sortOption" class="form-select" onchange="this.form.submit()">
                    <option value="Select">Select</option>
                    <option value="Id" selected="@(ViewBag.SortOption == "Id" ? "selected" : null)">ID</option>
                    <option value="Name" selected="@(ViewBag.SortOption == "Name" ? "selected" : null)">Name</option>
                </select>
            </form>

            <form asp-action="Search" method="GET">
                <label for="Search" class="form-label me-2 fw-bold fs-5">Search:</label>
                <input type="text" name="keyword" placeholder="Search">
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
        <div asp-validation-summary="ModelOnly" class="validation-summary"></div>
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Count == 0)
                {
                    <tr>
                        <td colspan="3" class="text-center">
                            <span>No Categories Found</span>
                        </td>
                    </tr>
                }
                @foreach (var category in Model)
                {
                    <tr>
                        <td>@category.Id</td>
                        <td>@category.Name</td>
                        <td>
                            <div class="d-flex gap-2">
                                <a asp-action="Edit" asp-route-id="@category.Id" class="btn btn-primary" style="font-size:15px">Edit</a>
                                <button class="btn btn-danger" onclick="showWarning('@category.Id')">Remove</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="d-flex justify-content-between align-items-center w-100 gap-3">
            <span class="fs-6 text-secondary">Categories found: @Model.Count</span>
            <div class="d-flex gap-2">
                <a asp-controller="Admin" asp-action="Dashboard" class="btn btn-secondary">Back to Dashboard</a>
                <a asp-action="Create" class="btn btn-success">Add Category</a>
            </div>
        </div>
    </div>
</div>

<script>
    function showWarning(id) {
        if (confirm(`Are you sure you want to delete category ${id}?`)) {
            fetch(`/Category/Delete`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                body: `id=${id}`
            }).then(response => {
                return response.json().then(data => {
                    if (!response.ok) {
                        throw new Error(data.message || "Failed to delete the category.");
                    }
                    return data;
                });
            }).then(data => {
                if (data.success) {
                    window.location.reload(); // Refresh the page on success
                } else {
                    alert(data.message || "Failed to delete the category.");
                }
            }).catch(error => alert(error.message));
        }
    }
</script>

